buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.moowork.gradle:gradle-node-plugin:1.2.0")
		classpath("com.palantir.gradle.docker:gradle-docker:0.20.1")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'com.palantir.docker'

repositories {
	mavenCentral()
}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

dependencies {
	//WEB
	implementation('org.springframework.boot:spring-boot-starter-web')

	//JPA
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('mysql:mysql-connector-java')

	//THYMELEAF
	implementation('org.springframework.boot:spring-boot-starter-thymeleaf')

	//MUSTACHE
	implementation('org.springframework.boot:spring-boot-starter-mustache')

	//LOG
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
	implementation('org.springframework.boot:spring-boot-starter-actuator')

	//AOP
	implementation('org.springframework.boot:spring-boot-starter-aop')

	//TEST
	testImplementation("org.springframework.boot:spring-boot-starter-test")
	testImplementation group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.3.0'
	testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
	testImplementation group: 'net.sourceforge.htmlunit', name: 'htmlunit', version: '2.30'

	// HOT SWAPPING
	// https://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-devtools.html
	// https://www.vojtechruzicka.com/spring-boot-devtools/
	developmentOnly("org.springframework.boot:spring-boot-devtools")
}
